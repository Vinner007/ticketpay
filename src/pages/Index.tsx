import { useNavigate } from "react-router-dom";
import { useState, useEffect } from "react";
import { CountdownTimer } from "@/components/CountdownTimer";
import { DateCard } from "@/components/DateCard";
import { FeatureCard } from "@/components/FeatureCard";
import { AnimatedBats } from "@/components/AnimatedBats";
import { SpiderWeb } from "@/components/SpiderWeb";
import { Button } from "@/components/ui/button";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from "@/components/ui/carousel";
import { Pizza, Camera, Ghost, Sparkles, RefreshCw } from "lucide-react";
import heroImage from "@/assets/hero-halloween.jpg";
import gallery1 from "@/assets/gallery-1.jpg";
import gallery2 from "@/assets/gallery-2.jpg";
import gallery3 from "@/assets/gallery-3.jpg";
import { supabase } from "@/lib/supabase";
import { toast } from "sonner";

interface DailySummary {
  event_date: string;
  available_capacity: number;
  max_capacity: number;
}

// üî• Max Capacity ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô
const MAX_CAPACITY_PER_DAY: Record<string, number> = {
  "2025-10-29": 252,
  "2025-10-30": 231,
  "2025-10-31": 252,
};

const Index = () => {
  const navigate = useNavigate();
  const [dailySummaries, setDailySummaries] = useState<DailySummary[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);

  // üî• ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Supabase ‡∏û‡∏£‡πâ‡∏≠‡∏° Real-time Updates
  const fetchDailySummary = async (showToast = false) => {
    try {
      setIsLoading(true);
      const { data, error } = await supabase
        .from('daily_summary')
        .select('event_date, available_capacity, max_capacity')
        .order('event_date', { ascending: true });

      if (error) {
        console.error('‚ùå Error fetching daily summary:', error);
        toast.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà');
        return;
      }

      if (data && data.length > 0) {
        console.log('‚úÖ Loaded data from Supabase:', data);
        setDailySummaries(data);
        setLastUpdated(new Date());
        if (showToast) {
          toast.success('‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß');
        }
      }
    } catch (error) {
      console.error('‚ùå Error:', error);
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    fetchDailySummary();

    // üîÑ Real-time subscription
    const channel = supabase
      .channel('daily_summary_changes')
      .on(
        'postgres_changes',
        {
          event: '*',
          schema: 'public',
          table: 'daily_summary'
        },
        (payload) => {
          console.log('üîî Real-time update received:', payload);
          fetchDailySummary(true);
        }
      )
      .subscribe();

    // ‚è∞ Auto-refresh ‡∏ó‡∏∏‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    const interval = setInterval(() => {
      fetchDailySummary();
    }, 30000);

    return () => {
      supabase.removeChannel(channel);
      clearInterval(interval);
    };
  }, []);

  // üéØ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á
  const getAvailabilityStatus = (eventDate: string) => {
    const summary = dailySummaries.find((s) => s.event_date === eventDate);
    
    if (!summary) {
      return { 
        label: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...", 
        status: "available" as const,
        color: "text-muted-foreground"
      };
    }

    const percentAvailable = (summary.available_capacity / summary.max_capacity) * 100;

    console.log(`üìä Status for ${eventDate}:`, {
      available: summary.available_capacity,
      max: summary.max_capacity,
      percent: percentAvailable.toFixed(1) + '%'
    });

    if (summary.available_capacity === 0) {
      return { 
        label: "‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß", 
        status: "sold-out" as const,
        color: "text-destructive"
      };
    }
    
    if (percentAvailable < 30) {
      return { 
        label: "‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢", 
        status: "limited" as const,
        color: "text-warning"
      };
    }
    
    return { 
      label: "‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á", 
      status: "available" as const,
      color: "text-success"
    };
  };

  // üîí ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏á
  const handleDateClick = (dateValue: string) => {
    const summary = dailySummaries.find(s => s.event_date === dateValue);
    
    if (!summary) {
      toast.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
      return;
    }

    if (summary.available_capacity === 0) {
      toast.error("üò¢ ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô");
      return;
    }

    if (summary.available_capacity < 5) {
      toast.warning(`‚ö†Ô∏è ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏û‡∏µ‡∏¢‡∏á ${summary.available_capacity} ‡∏ó‡∏µ‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏µ‡∏ö‡∏à‡∏≠‡∏á!`);
    }

    navigate(`/select-story?date=${dateValue}`);
  };

  const features = [
    {
      icon: Ghost,
      title: "Escape Room ‡∏ú‡∏µ‡∏™‡∏¥‡∏á",
      description: "‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡πÄ‡∏≠‡∏≤‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏£‡∏≠‡∏î‡∏à‡∏≤‡∏Å‡∏ö‡πâ‡∏≤‡∏ô‡∏ú‡∏µ‡∏™‡∏¥‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤!",
    },
    {
      icon: Pizza,
      title: "Halloween Market",
      description: "‡∏ï‡∏•‡∏≤‡∏î‡∏ô‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏ô‡∏™‡∏∏‡∏î‡∏Ñ‡∏£‡∏µ‡πÄ‡∏≠‡∏ï‡πÉ‡∏ô‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏Ç‡∏ô‡∏´‡∏±‡∏ß‡∏•‡∏∏‡∏Å",
    },
    {
      icon: Sparkles,
      title: "‡∏ö‡∏π‡∏ò‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
      description: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏∏‡∏î‡∏´‡∏•‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢!",
    },
    {
      icon: Camera,
      title: "‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏Å‡∏±‡∏ö‡∏ú‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡πÜ",
      description: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°... ‡∏ú‡∏µ‡∏û‡∏£‡πâ‡∏≠‡∏°... ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∂‡∏¢‡∏±‡∏á?",
    },
  ];

  // üî• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà - ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Database
  const dates = [
    {
      date: 29,
      dayName: "‡∏ß‡∏±‡∏ô‡∏û‡∏∏‡∏ò",
      month: "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°",
      year: 2568,
      availableSlots: dailySummaries.find(s => s.event_date === "2025-10-29")?.available_capacity || 0,
      status: getAvailabilityStatus("2025-10-29").status,
      dateValue: "2025-10-29",
    },
    {
      date: 30,
      dayName: "‡∏ß‡∏±‡∏ô‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ",
      month: "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°",
      year: 2568,
      availableSlots: dailySummaries.find(s => s.event_date === "2025-10-30")?.available_capacity || 0,
      status: getAvailabilityStatus("2025-10-30").status,
      dateValue: "2025-10-30",
    },
    {
      date: 31,
      dayName: "‡∏ß‡∏±‡∏ô‡∏®‡∏∏‡∏Å‡∏£‡πå",
      month: "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°",
      year: 2568,
      availableSlots: dailySummaries.find(s => s.event_date === "2025-10-31")?.available_capacity || 0,
      status: getAvailabilityStatus("2025-10-31").status,
      dateValue: "2025-10-31",
    },
  ];

  const galleryImages = [
    { src: gallery1, alt: "Halloween Party Atmosphere" },
    { src: gallery2, alt: "Photo Booth Fun" },
    { src: gallery3, alt: "Food and Drinks" },
  ];

  const faqs = [
    {
      question: "‡∏à‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß‡πÑ‡∏î‡πâ‡∏Å‡∏µ‡πà‡∏Ñ‡∏ô‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á?",
      answer: "‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ 5-7 ‡∏Ñ‡∏ô‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ",
    },
    {
      question: "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?",
      answer: "‡∏£‡∏≤‡∏Ñ‡∏≤ 80 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏á‡∏≤‡∏ô ‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏© '‡∏°‡∏≤ 7 ‡∏à‡πà‡∏≤‡∏¢ 6' (‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î GROUP7FOR6)",
    },
    {
      question: "‡∏°‡∏µ‡∏Å‡∏µ‡πà‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡πà‡∏ô?",
      answer: "‡∏°‡∏µ 2 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡πà‡∏ô: 1) ‡πÇ‡∏£‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≤‡∏õ (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å 4‚≠ê / ‡∏ô‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ß 4‚≠ê) ‡πÅ‡∏•‡∏∞ 2) ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏î (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏Å 3‚≠ê / ‡∏ô‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ß 5‚≠ê) ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 10 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö",
    },
    {
      question: "‡∏°‡∏µ‡∏£‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏´‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏á?",
      answer: "‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô 10:00-17:00 ‡∏ô. ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏£‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å: ‡∏£‡∏≠‡∏ö‡πÄ‡∏ä‡πâ‡∏≤ (10:00-12:00), ‡∏£‡∏≠‡∏ö‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á (12:30-14:30), ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏ö‡πÄ‡∏¢‡πá‡∏ô (15:00-17:00) ‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏±‡∏Å‡πÄ‡∏ö‡∏£‡∏Å 12:00-12:30 ‡πÅ‡∏•‡∏∞ 14:30-15:00 ‡∏ô. ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 30 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°‡∏°‡∏µ‡∏û‡∏¥‡∏ò‡∏µ‡πÄ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÇ‡∏î‡∏¢‡∏ó‡πà‡∏≤‡∏ô‡∏£‡∏≠‡∏á‡∏ß‡∏¥‡∏£‡∏±‡∏™ ‡πÄ‡∏ß‡∏•‡∏≤ 13:00-13:30",
    },
    {
      question: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà?",
      answer: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 29 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°: 252 ‡∏ó‡∏µ‡πà (36 ‡∏£‡∏≠‡∏ö), ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 30 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°: 231 ‡∏ó‡∏µ‡πà (33 ‡∏£‡∏≠‡∏ö - ‡∏°‡∏µ‡∏û‡∏¥‡∏ò‡∏µ‡πÄ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô), ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 31 ‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°: 252 ‡∏ó‡∏µ‡πà (36 ‡∏£‡∏≠‡∏ö). ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á 3 ‡∏ß‡∏±‡∏ô‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î 735 ‡∏ó‡∏µ‡πà",
    },
    {
      question: "‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏á‡∏ä‡∏∏‡∏î‡∏Æ‡∏≤‡πÇ‡∏•‡∏ß‡∏µ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
      answer: "‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö ‡πÅ‡∏ï‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏ï‡πà‡∏á‡∏ä‡∏∏‡∏î‡∏ò‡∏µ‡∏°‡∏ú‡∏µ/‡πÅ‡∏ü‡∏ô‡∏ã‡∏µ‡∏Æ‡∏≤‡πÇ‡∏•‡∏ß‡∏µ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö Gift Voucher ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•!",
    },
    {
      question: "‡∏ö‡∏±‡∏ï‡∏£‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Å‡∏µ‡πà‡∏ß‡∏±‡∏ô?",
      answer: "‡∏ö‡∏±‡∏ï‡∏£‡∏°‡∏µ‡∏ú‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏≤‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏™‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
    },
    {
      question: "‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏°‡∏≤‡∏á‡∏≤‡∏ô?",
      answer: "‡∏ô‡∏≥ QR code/‡∏ö‡∏±‡∏ï‡∏£‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏´‡πâ‡∏≤‡∏°‡∏ô‡∏≥‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏ú‡∏µ‡∏™‡∏¥‡∏á (‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏£‡∏±‡∏ö‡∏ù‡∏≤‡∏Å) ‡πÅ‡∏•‡∏∞‡∏ù‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏£‡∏±‡∏ö‡∏ù‡∏≤‡∏Å. ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏ó‡∏±‡πâ‡∏á 2 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ß‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏°‡∏µ‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à",
    },
  ];

  // üî• ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
  const totalCapacity = 735; // 252 + 231 + 252

  return (
    <div className="relative min-h-screen">
      <AnimatedBats />
      
      {/* Hero Section */}
      <section className="relative min-h-screen flex items-center justify-center overflow-hidden">
        <div
          className="absolute inset-0 bg-cover bg-center opacity-30"
          style={{ backgroundImage: `url(${heroImage})` }}
        />
        <div className="absolute inset-0 bg-gradient-to-b from-background/50 via-background/70 to-background" />
        
        <SpiderWeb position="top-left" />
        <SpiderWeb position="top-right" />

        <div className="relative z-10 container mx-auto px-4 py-20 text-center">
          <h1 className="text-6xl md:text-8xl lg:text-9xl mb-6 text-primary text-glow-orange animate-float font-spooky">
            THE HOMICIDE BLOOD!
          </h1>
          <div className="text-2xl md:text-3xl mb-6 text-foreground font-body">
            ‡∏°‡∏≤‡πÄ‡∏â‡∏•‡∏¥‡∏°‡∏â‡∏•‡∏≠‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Æ‡∏≤‡πÇ‡∏•‡∏ß‡∏µ‡∏ô‡∏™‡∏∏‡∏î‡∏™‡∏¢‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î! üëª
          </div>
          <div className="text-lg md:text-xl mb-12 text-muted-foreground">
            <span className="text-primary font-semibold">2 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç</span> ‚Ä¢ 
            <span className="mx-2">105 ‡∏£‡∏≠‡∏ö</span> ‚Ä¢ 
            <span className="mx-2">{totalCapacity} ‡∏Ñ‡∏ô</span> ‚Ä¢ 
            <span className="mx-2">3 ‡∏ß‡∏±‡∏ô</span>
          </div>

          <div className="mb-12">
            <CountdownTimer />
          </div>

          <div className="flex justify-center">
            <Button
              onClick={() => {
                const element = document.getElementById('date-selection');
                element?.scrollIntoView({ behavior: 'smooth' });
              }}
              size="lg"
              className="text-2xl px-16 py-8 bg-primary text-primary-foreground hover:bg-primary/90 glow-orange font-bold shadow-2xl"
            >
              ‡∏à‡∏≠‡∏á‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏•‡∏¢ üéÉ
            </Button>
          </div>
        </div>
      </section>

      {/* Date Selection Section */}
      <section id="date-selection" className="relative py-20 bg-background/50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <SpiderWeb position="top-left" />
            <h2 className="text-5xl md:text-6xl mb-4 text-primary text-glow-orange font-spooky">
              ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
            </h2>
            <p className="text-lg text-muted-foreground">
              ‡∏ó‡∏µ‡πà ‡∏ï‡∏∂‡∏Å 4 ‡∏ä‡∏±‡πâ‡∏ô 1 ‡πÅ‡∏•‡∏∞ 2 ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏®‡∏£‡∏µ‡∏õ‡∏ó‡∏∏‡∏°
            </p>
            <p className="text-sm text-muted-foreground mt-2">
              * ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÅ‡∏ö‡∏ö Real-time)
            </p>
            
            {/* ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î */}
            <div className="flex items-center justify-center gap-2 mt-4">
              <Button
                onClick={() => fetchDailySummary(true)}
                variant="outline"
                size="sm"
                disabled={isLoading}
                className="border-primary text-primary hover:bg-primary/10"
              >
                <RefreshCw className={`w-4 h-4 mr-2 ${isLoading ? 'animate-spin' : ''}`} />
                ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </Button>
              {lastUpdated && (
                <span className="text-xs text-muted-foreground">
                  ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: {lastUpdated.toLocaleTimeString('th-TH')}
                </span>
              )}
            </div>
          </div>

          {isLoading && !dailySummaries.length ? (
            <div className="text-center text-muted-foreground">
              <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-primary mb-4"></div>
              <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
            </div>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
              {dates.map((date) => {
                const statusInfo = getAvailabilityStatus(date.dateValue);
                const maxCap = MAX_CAPACITY_PER_DAY[date.dateValue];
                const isSpecialDay = date.dateValue === "2025-10-30";
                
                return (
                  <div 
                    key={date.date} 
                    onClick={() => handleDateClick(date.dateValue)}
                    className={`cursor-pointer transition-transform hover:scale-105 ${
                      date.status === 'sold-out' ? 'opacity-60 cursor-not-allowed' : ''
                    }`}
                  >
                    <DateCard {...date} />
                    <div className={`text-center mt-2 font-semibold ${statusInfo.color}`}>
                      {statusInfo.label}
                    </div>
                    {isSpecialDay && (
                      <div className="text-center mt-1">
                        <span className="text-xs bg-accent/20 text-accent px-2 py-1 rounded-full">
                          üéâ ‡∏°‡∏µ‡∏û‡∏¥‡∏ò‡∏µ‡πÄ‡∏õ‡∏¥‡∏î‡∏á‡∏≤‡∏ô
                        </span>
                      </div>
                    )}
                    <div className="text-center mt-1 text-xs text-muted-foreground">
                      (‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {maxCap} ‡∏ó‡∏µ‡πà)
                    </div>
                  </div>
                );
              })}
            </div>
          )}

          {/* Live Update Indicator */}
          <div className="text-center mt-8">
            <div className="inline-flex items-center gap-2 bg-success/10 text-success px-4 py-2 rounded-full text-sm">
              <div className="w-2 h-2 bg-success rounded-full animate-pulse"></div>
              <span>‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö Real-time</span>
            </div>
          </div>
        </div>
      </section>

      {/* Event Highlights */}
      <section className="relative py-20">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-5xl md:text-6xl mb-4 text-secondary text-glow-purple font-spooky">
              ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏á‡∏≤‡∏ô
            </h2>
            <p className="text-xl text-muted-foreground">
              ‡∏™‡∏ô‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢‡∏ï‡∏•‡∏≠‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto">
            {features.map((feature, index) => (
              <FeatureCard key={index} {...feature} />
            ))}
          </div>
        </div>
      </section>

      {/* Gallery Section */}
      <section className="relative py-20 bg-background/50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-5xl md:text-6xl mb-4 text-primary text-glow-orange font-spooky">
              ‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏à‡∏≤‡∏Å‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
            </h2>
            <p className="text-xl text-muted-foreground">
              ‡∏ä‡∏°‡∏†‡∏≤‡∏û‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏™‡∏∏‡∏î‡∏°‡∏±‡∏ô‡∏™‡πå‡∏à‡∏≤‡∏Å‡∏á‡∏≤‡∏ô‡∏õ‡∏µ‡∏Å‡πà‡∏≠‡∏ô
            </p>
          </div>

          <div className="max-w-4xl mx-auto">
            <Carousel className="w-full">
              <CarouselContent>
                {galleryImages.map((image, index) => (
                  <CarouselItem key={index}>
                    <div className="relative aspect-video rounded-xl overflow-hidden border-4 border-primary glow-orange">
                      <img
                        src={image.src}
                        alt={image.alt}
                        className="w-full h-full object-cover transition-transform duration-300 hover:scale-110"
                      />
                      <div className="absolute inset-0 bg-primary/20 hover:bg-transparent transition-colors duration-300" />
                    </div>
                  </CarouselItem>
                ))}
              </CarouselContent>
              <CarouselPrevious />
              <CarouselNext />
            </Carousel>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="relative py-20">
        <SpiderWeb position="bottom-left" />
        <SpiderWeb position="bottom-right" />
        
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-5xl md:text-6xl mb-4 text-secondary text-glow-purple font-spooky">
              ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
            </h2>
          </div>

          <div className="max-w-3xl mx-auto">
            <Accordion type="single" collapsible className="space-y-4">
              {faqs.map((faq, index) => (
                <AccordionItem
                  key={index}
                  value={`item-${index}`}
                  className="bg-card border-2 border-border rounded-lg px-6 hover:border-secondary transition-colors"
                >
                  <AccordionTrigger className="text-lg font-semibold hover:text-primary">
                    {faq.question}
                  </AccordionTrigger>
                  <AccordionContent className="text-muted-foreground">
                    {faq.answer}
                  </AccordionContent>
                </AccordionItem>
              ))}
            </Accordion>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="relative py-12 bg-card border-t-2 border-border">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-8">
            <div>
              <h3 className="text-2xl font-spooky text-primary mb-4">THE HOMICIDE BLOOD 2025</h3>
              <p className="text-muted-foreground">
                ‡∏á‡∏≤‡∏ô‡∏Æ‡∏≤‡πÇ‡∏•‡∏ß‡∏µ‡∏ô‡∏™‡∏∏‡∏î‡∏™‡∏¢‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏´‡πà‡∏á‡∏õ‡∏µ
              </p>
              <p className="text-sm text-muted-foreground mt-2">
                ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {totalCapacity} ‡∏ó‡∏µ‡πà ‚Ä¢ 3 ‡∏ß‡∏±‡∏ô
              </p>
            </div>
            <div>
              <h4 className="text-lg font-semibold mb-4">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤</h4>
              <p className="text-muted-foreground">Email: info@halloweennight.com</p>
              <p className="text-muted-foreground">Tel: 02-XXX-XXXX</p>
            </div>
            <div>
              <h4 className="text-lg font-semibold mb-4">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</h4>
              <p className="text-muted-foreground">‡∏ï‡∏∂‡∏Å 4 ‡∏ä‡∏±‡πâ‡∏ô 1,2</p>
              <p className="text-muted-foreground">‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏®‡∏£‡∏µ‡∏õ‡∏ó‡∏∏‡∏° ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø</p>
            </div>
          </div>
          <div className="text-center text-muted-foreground border-t border-border pt-8">
            <p>
              ¬© 2025{" "}
              
                href="https://www.cxntrolx.in.th/"
                target="_blank"
                rel="noopener noreferrer"
                className="text-primary hover:text-primary/80 transition-colors duration-300 underline font-semibold"
              >
                Cxntrolx
              </a>
              . All rights reserved.
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;
