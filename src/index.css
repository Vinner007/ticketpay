@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Halloween Theme Colors */
    --background: 0 0% 10%;
    --foreground: 0 0% 100%;

    --card: 0 0% 16%;
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 16%;
    --popover-foreground: 0 0% 100%;

    --primary: 20 100% 55%;
    --primary-foreground: 0 0% 100%;

    --secondary: 270 100% 50%;
    --secondary-foreground: 0 0% 100%;

    --muted: 0 0% 20%;
    --muted-foreground: 0 0% 80%;

    --accent: 45 100% 50%;
    --accent-foreground: 0 0% 10%;

    --destructive: 340 100% 60%;
    --destructive-foreground: 0 0% 100%;

    --success: 150 100% 50%;
    --success-foreground: 0 0% 10%;

    --border: 0 0% 25%;
    --input: 0 0% 25%;
    --ring: 20 100% 55%;

    --radius: 0.75rem;

    /* Custom Halloween Gradients */
    --gradient-halloween: linear-gradient(135deg, hsl(20 100% 55%), hsl(270 100% 50%));
    --gradient-dark: linear-gradient(180deg, hsl(0 0% 10%), hsl(270 100% 5%));
    --gradient-glow: radial-gradient(circle, hsl(20 100% 55% / 0.3), transparent);
    
    /* Shadows & Glows */
    --shadow-glow-orange: 0 0 20px hsl(20 100% 55% / 0.5);
    --shadow-glow-purple: 0 0 20px hsl(270 100% 50% / 0.5);
    --shadow-card: 0 10px 40px hsl(0 0% 0% / 0.5);
    
    /* Animation Timings */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-body;
    background: linear-gradient(180deg, hsl(0 0% 10%), hsl(270 20% 8%));
    min-height: 100vh;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-spooky;
  }
}

@layer utilities {
  .glow-orange {
    box-shadow: 0 0 20px hsl(20 100% 55% / 0.5), 0 0 40px hsl(20 100% 55% / 0.3);
  }

  .glow-purple {
    box-shadow: 0 0 20px hsl(270 100% 50% / 0.5), 0 0 40px hsl(270 100% 50% / 0.3);
  }

  .glow-gold {
    box-shadow: 0 0 15px hsl(45 100% 50% / 0.6);
  }

  .text-glow-orange {
    text-shadow: 0 0 10px hsl(20 100% 55% / 0.8), 0 0 20px hsl(20 100% 55% / 0.5);
  }

  .text-glow-purple {
    text-shadow: 0 0 10px hsl(270 100% 50% / 0.8), 0 0 20px hsl(270 100% 50% / 0.5);
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animate-pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }

  .animate-bounce-slow {
    animation: bounce 2s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  @keyframes pulseGlow {
    0%, 100% {
      box-shadow: 0 0 20px hsl(20 100% 55% / 0.5);
    }
    50% {
      box-shadow: 0 0 40px hsl(20 100% 55% / 0.8), 0 0 60px hsl(20 100% 55% / 0.4);
    }
  }

  @keyframes float-random {
    0%, 100% {
      transform: translate(0, 0) rotate(0deg);
    }
    25% {
      transform: translate(10px, -10px) rotate(5deg);
    }
    50% {
      transform: translate(-5px, -20px) rotate(-5deg);
    }
    75% {
      transform: translate(-10px, -10px) rotate(3deg);
    }
  }

  .animate-float-random {
    animation: float-random 6s ease-in-out infinite;
  }
}
